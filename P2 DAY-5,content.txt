tree:
----
-> it has two branches
  1.left branch
  2.right branch
->first node ===>root
->node==> parent node
->sub node==>child node
->nodes without sub node ==>leaf node

binary tree:
------------
a tree in which the node can have maximum of two childrens.

tree traversal:
---------------        d=data=root

1.inorder traversal : ldr
-> left=root=right
-------------------------------------
2.preorder traversal : dlr
-> root=left=right
-------------------------------------
3.postorder traversal : lrd
-> left=right=root
---------------------------------------------------
inorder traversal:
      
               A
              / \
             B   C
            / \ / \
           D  E F  G

D,B,E,A,F,C,G

               15
               /\
              /  \
             24   54
             /    /\
            35   /  \
                62   13

35,24,15,62,54,13
-----------------------------------------------------------
preorder traversal:

1.breadth first traversal =BFT
2.depth first traversal =DFT

           45
           /\
          /  \
         25   75
         /\
        /  \ 
       15   35

inorder: 15,25,35,45,75
preorder: 45,25,15,35,75

          1
         /\
        /  \
       2    3
      / \  / \
     4   5 6  7 
        /    /\
       8    9  10

inorder:4,2,8,5,1,6,3,9,7,10
preorder: 1,2,4,5,8,3,6,7,9,10
--------------------------------------------------------------
postorder traversal:

               1
              /\
             /  \ 
            2    3
           / \  / \
          4   5 6  7

inorder:4,2,5,1,6,3,7
preorder:1,2,4,5,3,6,7
postorder:4,5,2,6,7,3,1

---------------------------------------------------------------
inorder:4,2,5,1,6,3,7

               1
              /\
             /  \ 
            2    3
           / \  / \
          4   5 6  7

------------------------------------------------------------
42135
        1
       / \
      2   3
     / \ 
    4   5

preorder:1,2,4,5,3
inorder:4,2,5,1,3
postorder:4,5,2,3,1
---------------------------------------------------------------
types of binary tree:
---------------------

1. full binary tree:
   ----------------
all nodes will have zero or two children that means it doesnot 
have single children
              
               12
               /\
              8  18
             /\
            5  11

2.degenerate binary tree:(pathological)
  -----------------------
all nodes will have zero or one children
          10
         /
        20
          \
          30
            \
            40

3.skewed binary tree:
  ------------------
  a.left skewed binary tree
           a
          / 
         b
        /
       c

  b.right skewed binary tree
           a
            \
             b
              \
               c
-------------------------------------------------------------
based on the level, there are 3 types:

1.complete binary tree:
  ----------------------
-> every level should be full or complete 
-> in last level if it is incomplete ,nodes should present at 
extreme left side
              
               12
               /\
              8  18
             /\
            5  11

2.perfect binary tree:
  -------------------
->all internal nodes which has 2 children
->leaf nodes should be at the same level

            18
            /\
          15  30
         /\   / \
       40 50 100 40

3.balanced binary tree:
  ---------------------

->for all the nodes height of left sub tree - height of right 
sub tree can be 0 or 1.

   0                          0
   /\                         /\
  1  2                       1  2 
  /\                        /\
 3  4                      3  4
                           |
balanced                   5
2-1=1                     unbalanced
                          3-1=2
---------------------------------------------------------------
special tree:
-------------
1.binary search tree:
---------------------

-> all the left side elements should be lesser than the parent.
-> all the right side elements should be greater than the parent.

            7
           /\
          3  10
         /\   \ 
        2  5   12
--------------------------------------------------------------
1.80,10,15,16,45,0,92,73,44
            
                  45
                 /  \
               16    80
              / \    / \
            15   44 73  92 
           / 
          10
         / 
        0
-------------------------------------------------------

2. 200,25,5,10,15,-10,-30,61,97,-88,-55,77

                    25
                  /   \ 
                 5     77
                / \   /  \
             -10  10 61   97
             / \           \
          -30   15         200
           /
         -55
         /
       -88

------------------------------------------------------------

3. 5,4,3,2,1,1,2,3,4,5,-1,-2,-3,-4,-5,0

                 0
                /\ 
               /  \
             -3    3
             /\   / \
           -4 -2  2  4
           / \      / \
          /   \    /   \
        -5    -1  1     5

-------------------------------------------------------------












